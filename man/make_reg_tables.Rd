% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_reg_tables.R
\name{make_reg_tables}
\alias{make_reg_tables}
\title{Make regression tables}
\usage{
make_reg_tables(mplus_lcr_table, table_style = "multiline",
  table_split_cells = 50, table_split_table = 100,
  table_alignment = "left", table_alignment_rownames = "left")
}
\arguments{
\item{mplus_lcr_table}{data.frame}

\item{table_style}{character. Table style options are: "multiline", "grid", "simple", and "rmarkdown".}

\item{table_split_cells}{integer. Max cell length (number of characters).}

\item{table_split_table}{integer. Max row length (number of characters).}

\item{table_alignment}{character. Table alignment options are: "left", "right", "centre".}

\item{table_alignment_rownames}{character. Rowname alignment options are: "left", "right", "centre".}
}
\value{
split_lcr_table data.frame
}
\description{
Takes raw regression analysis output, formated in Mplus style, and makes it into a
nicely formatted regression results table. Note: this function is *very* specific to a
particular type and format of analysis output, and assumes a certain naming convention
for the variables. It would likely need to be modified to be remotely useful to anyone
other than the author.
}
\examples{
# Use the function without setting any arguments
input_table_1 <- as.data.frame(readr::read_lines(
          system.file("extdata", "messy_mplus_regression_output_1.txt", package = "nicertables")))
make_reg_tables(mplus_lcr_table = input_table_1)
# Use the function with some different arguments (to improve the formatting for this particular data file)
input_table_2 <- as.data.frame(readr::read_lines(
          system.file("extdata", "messy_mplus_regression_output_2.txt", package = "nicertables")))
make_reg_tables(mplus_lcr_table = input_table_2, table_style = "grid", table_split_cells = 20, table_split_table = 80,
								 table_alignment_rownames = "centre")

}

